{"version":3,"sources":["webpack:///./js/selectPlugin/select-plugin.js","webpack:///./js/createEvents/createEvents.js","webpack:///./js/modal/modal.js","webpack:///./js/tableTemplate.js","webpack:///./js/pageControl/pageControl.js","webpack:///./index.js","webpack:///./js/eventTemplate.js"],"names":["Select","selector","options","startID","this","selectRef","document","querySelector","selectedID","dispatchFilter","_render","_setup","valueRef","selectedItemsArray","handlerEvent","bind","addEventListener","event","type","target","dataset","toggle","id","Number","isItemInArray","find","item","isSelectAll","itemUser","_currentItem","elRefs","querySelectorAll","length","forEach","element","classList","remove","filter","push","add","textContent","map","value","close","data","getSelectedItemsArray","isOpen","open","placeholder","innerHTML","textPlaceholder","classSelItem","items","join","template","delete","removeEventListener","contains","selectMember","CreateEvents","selectorForm","dispatchEvent","formRef","_init","eventItem","eventsItemArray","tableBodyRef","errorFormRef","_formHandlerSubmit","_isCellFree","marker","isCellFree","firstElementChild","_errorHandler","message","errorMessageTemplate","timerId","setTimeout","clearTimeout","e","preventDefault","membersArr","formData","FormData","uniqid","eventName","get","memberArr","reset","Modal","modalRef","createTableTemplate","tableData","time","day","createTableRow","PageControl","selectorButtonCreateEvent","selectorPageNav","selectorSectionForm","selectorSectionTable","selectorButtonCancelCreate","buttonCreateEventRef","buttonCancelEventRef","pageNavRef","pageSectionFormRef","pageSectionTableRef","_handlerButtonCreate","_handlerButtonCancel","viewPageTable","viewPageForm","itemEventArray","deleteItemId","modal","pageControl","refs","localStorage","getItem","JSON","parse","renderEvent","loadFromSave","arrayCellRefs","filterValueArray","filtersArr","domItemEvent","domFilterStr","membersfilter","includes","itemEvent","save","tableCellRef","mockup","membersStr","eventTemplate","saveData","stringify","setItem","parentNode","console","log"],"mappings":"klBAAA,IA2BaA,EAAb,WAEI,WAAYC,EAAUC,EAASC,GAC3BC,KAAKC,UAAYC,SAASC,cAAcN,GACxCG,KAAKF,QAAUA,EACfE,KAAKI,WAAaL,EAClBC,KAAKK,eAAiBP,EAAQO,eAAiBP,EAAQO,eAAiB,KACxEL,KAAKM,UACLN,KAAKO,SACLP,KAAKQ,SAAWN,SAASC,cAAiBN,EAA1B,wBAChBG,KAAKS,mBAAqB,GAVlC,I,MAAA,uBAaIF,OAAA,WACIP,KAAKU,aAAeV,KAAKU,aAAaC,KAAKX,MAC3CA,KAAKC,UAAUW,iBAAiB,QAASZ,KAAKU,eAftD,EAkBIA,aAAA,SAAaG,GAAO,IACRC,EAASD,EAAME,OAAOC,QAAtBF,KAKR,GAJa,UAATA,GACAd,KAAKiB,SAGI,SAATH,EAAiB,CACjB,IAAII,EAAKC,OAAON,EAAME,OAAOC,QAAQE,IACrClB,KAAKI,WAAac,EAClB,IAAIE,EAAgBpB,KAAKS,mBAAmBY,MAAK,SAAAC,GAAI,OAAIH,OAAOG,EAAKJ,MAAQA,KACzEK,EAAcvB,KAAKS,mBAAmBY,MAAK,SAAAC,GAAI,OAAwB,IAApBH,OAAOG,EAAKJ,OAC/DM,EAAWxB,KAAKyB,eACdC,EAAS1B,KAAKC,UAAU0B,iBAAf,cACXJ,GAAiD,GAAlCvB,KAAKS,mBAAmBmB,UACvCF,EAAOG,SAAQ,SAAAC,GACXA,EAAQC,UAAUC,OAAO,eAE7BhC,KAAKS,mBAAqB,IAE1BW,GACApB,KAAKS,mBAAL,UAA8BT,KAAKS,mBAAmBwB,QAAO,SAAAX,GAAI,OAAIH,OAAOG,EAAKJ,MAAQA,MACzFL,EAAME,OAAOgB,UAAUC,OAAO,cAGnB,IAAPd,IACAlB,KAAKS,mBAAqB,GAC1BiB,EAAOG,SAAQ,SAAAC,GACXA,EAAQC,UAAUC,OAAO,gBAGjChC,KAAKS,mBAAmByB,KAAKV,GAC7BX,EAAME,OAAOgB,UAAUI,IAAI,aAE/BnC,KAAKQ,SAAS4B,YAAcpC,KAAKS,mBAAmBmB,OAAS,EAAI5B,KAAKS,mBAAmB4B,KAAI,SAAAf,GAAI,OAAIA,EAAKgB,SAAS,MAG1G,aAATxB,GACAd,KAAKuC,SAvDjB,EA+DId,aAAA,WAAe,WACX,OAAOzB,KAAKF,QAAQ0C,KAAKnB,MAAK,SAAAC,GAAI,OAAIH,OAAOG,EAAKJ,MAAQ,EAAKd,eAhEvE,EAmEIqC,sBAAA,WACI,OAAOzC,KAAKS,oBApEpB,EAuEIQ,OAAA,WACIjB,KAAK0C,OAAS1C,KAAKuC,QAAUvC,KAAK2C,QAxE1C,EA2EIrC,QAAA,WAAU,MACiCN,KAAKF,QAApC8C,EADF,EACEA,YAAaJ,EADf,EACeA,KAAMzC,EADrB,EACqBA,QAC3BC,KAAKC,UAAU8B,UAAUI,IAAI,UAC7BnC,KAAKC,UAAU4C,UAzGN,SAACL,EAAWI,EAAa7C,QAAY,IAApCyC,MAAO,IACrB,IAAIM,EAAe,MAAGF,IAAe,eACjCG,EAAe,IACbC,EAAQR,EAAKH,KAAI,SAAAf,GAOnB,OANIA,EAAKJ,KAAOnB,GACZ+C,EAAkBxB,EAAKgB,MACvBS,EAAe,YAEfA,EAAe,IAEnB,0BAAiCA,EAAjC,+BAA4EzB,EAAKJ,GAAjF,KAAwFI,EAAKgB,MAA7F,WAGJ,gMAGUQ,EAHV,8HAQSE,EAAMC,KAAK,KARpB,oCA4F+BC,CAASV,EAAMI,EAAa7C,IA9E/D,EAiFI4C,KAAA,WACI3C,KAAKC,UAAU8B,UAAUI,IAAI,SAlFrC,EAqFII,MAAA,WACQvC,KAAKK,gBACLL,KAAKK,eAAeL,KAAKS,oBAE7BT,KAAKC,UAAU8B,UAAUC,OAAO,SAzFxC,EA4FImB,OAAA,WACInD,KAAKC,UAAUmD,oBAAoB,QAASpD,KAAKU,cACjDV,KAAKC,UAAU4C,UAAY,K,EA9FnC,G,EAAA,mBA2DI,WACI,OAAO7C,KAAKC,UAAU8B,UAAUsB,SAAS,a,2BA5DjD,K,iCCvBMC,EAAe,IAAI1D,EAAO,oCAAqC,CACjEgD,YAAa,eACbJ,KAAMA,IAGWe,E,WAEjB,cAA6C,IAA/BC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,cACxBzD,KAAK0D,QAAUxD,SAASC,cAAcqD,GACtCxD,KAAK2D,QACL3D,KAAK4D,UAAY,KACjB5D,KAAK6D,gBAAkB,GACvB7D,KAAKyD,cAAgBA,EACrBzD,KAAK8D,aAAe5D,SAASC,cAAc,4BAC3CH,KAAK+D,aAAe7D,SAASC,cAAc,4B,2BAG/CwD,MAAA,WAEI3D,KAAKgE,mBAAqBhE,KAAKgE,mBAAmBrD,KAAKX,MACvDA,KAAK0D,QAAQ9C,iBAAiB,SAAUZ,KAAKgE,qB,EAGjDC,YAAA,SAAYC,GACR,IAAIC,GAAa,EAMjB,OALanE,KAAK8D,aAAa3D,cAAlB,iBAAiD+D,EAAjD,MAEJE,oBACLD,GAAa,GAEVA,G,EAGXE,cAAA,SAAcC,GAAS,WACnBtE,KAAK+D,aAAahC,UAAUC,OAAO,UACnC,IAAMuC,EAAuB,iCAAiCD,EAApC,OAC1BtE,KAAK+D,aAAalB,UAAY0B,EAC9B,IAAMC,EAAUC,YAAW,WACvB,EAAKV,aAAahC,UAAUI,IAAI,UAChC,EAAK4B,aAAalB,UAAY,GAC9B6B,aAAaF,KACd,M,EAGPR,mBAAA,SAAmBW,GACfA,EAAEC,iBACF,IAAMC,EAAavB,EAAab,wBAC1BqC,EAAW,IAAIC,SAAS/E,KAAK0D,SAE/BmB,EAAWjD,OAAS,GACpB5B,KAAK4D,UAAY,CACb1C,GAAI8D,MACJC,UAAWH,EAASI,IAAI,QACxBC,UAAWN,EACXX,OAAWY,EAASI,IAAI,QAAlB,IAA6BJ,EAASI,IAAI,QAOpDlF,KAAKiE,YAAYjE,KAAK4D,UAAUM,SAChClE,KAAK0D,QAAQ0B,QACbpF,KAAKyD,cAAczD,KAAK4D,YAExB5D,KAAKqE,cAAc,0DARnBrE,KAAKqE,cAAc,yB,SC5DVgB,E,WACjB,aACIrF,KAAKsF,SAAWpF,SAASC,cAAc,uB,2BAE3CwC,KAAA,WACI3C,KAAKsF,SAASvD,UAAUI,IAAI,S,EAEhCI,MAAA,WACIvC,KAAKsF,SAASvD,UAAUC,OAAO,S,iBCCxB,SAASuD,IAEpB,SADcC,EAAUC,KAAKpD,KAAI,SAAAf,GAAI,OATzC,SAAwBmE,GACpB,IAAMzC,EAAQwC,EAAUE,IAAIrD,KAAI,SAAAf,GAAI,0BAAwBmE,EAAxB,IAAgCnE,EAAhC,8BACpC,qEACqCmE,EADrC,iBAEEzC,EAAMC,KAAK,KAFb,eAOyC0C,CAAerE,MACxC2B,KAAK,K,ICXJ2C,E,WACjB,cAKkC,IAJ9BC,EAI8B,EAJ9BA,0BACAC,EAG8B,EAH9BA,gBACAC,EAE8B,EAF9BA,oBACAC,EAC8B,EAD9BA,qBACAC,EAA8B,EAA9BA,2BAEAjG,KAAKkG,qBAAuBhG,SAASC,cAAc0F,GACnD7F,KAAKmG,qBAAuBjG,SAASC,cAAc8F,GACnDjG,KAAKoG,WAAalG,SAASC,cAAc2F,GACzC9F,KAAKqG,mBAAqBnG,SAASC,cAAc4F,GACjD/F,KAAKsG,oBAAsBpG,SAASC,cAAc6F,GAClDhG,KAAK2D,Q,2BAGTA,MAAA,WACI3D,KAAKuG,qBAAuBvG,KAAKuG,qBAAqB5F,KAAKX,MAC3DA,KAAKkG,qBAAqBtF,iBAAiB,QAASZ,KAAKuG,sBACzDvG,KAAKwG,qBAAuBxG,KAAKwG,qBAAqB7F,KAAKX,MAC3DA,KAAKmG,qBAAqBvF,iBAAiB,QAASZ,KAAKwG,uB,EAG7DA,qBAAA,WACIxG,KAAKyG,iB,EAGTF,qBAAA,WACIvG,KAAK0G,gB,EAETD,cAAA,WACIzG,KAAKoG,WAAWrE,UAAUC,OAAO,UACjChC,KAAKsG,oBAAoBvE,UAAUC,OAAO,UAC1ChC,KAAKqG,mBAAmBtE,UAAUI,IAAI,W,EAE1CuE,aAAA,WACI1G,KAAKoG,WAAWrE,UAAUI,IAAI,UAC9BnC,KAAKsG,oBAAoBvE,UAAUI,IAAI,UACvCnC,KAAKqG,mBAAmBtE,UAAUC,OAAO,W,u0BC7BjD,IAAI2E,EAAiB,GACjBC,EAAe,KAEbC,EAAQ,IAAIxB,EASZyB,EAAc,IAAIlB,EAPG,CACvBC,0BAA2B,8BAC3BI,2BAA4B,8BAC5BH,gBAAiB,yBACjBC,oBAAqB,6BACrBC,qBAAsB,gCAIpBe,EAAO,CACTjD,aAAc5D,SAASC,cAAc,4BACrCmF,SAAUpF,SAASC,cAAc,wBAIjC4G,EAAKjD,aAAajB,UAAY0C,IAKlC,WAEI,GAAIyB,aAAaC,QAAQ,aAAc,CACnC,IAAMzE,EAAOwE,aAAaC,QAAQ,aAClCN,EAAiB,GAAH,OAAOO,KAAKC,MAAM3E,IAChC4E,KAPRC,GAYA,IAAMC,EAAgBP,EAAKjD,aAAanC,iBAAiB,sBA2BpC,IAAI/B,EAAO,8BAA+B,CAC3DgD,YAAa,eACbJ,KAAMA,EACNzC,QAAS,EACTM,eA7BJ,SAAwBkH,GACpB,GAAKA,EAAL,CAGA,IAAIC,EAAaD,EAAiBlF,KAAI,SAAAf,GAAI,OAAIA,EAAKgB,SAEnDgF,EAAczF,SAAQ,SAAAP,GAClB,IAAImG,EAAenG,EAAK8C,kBACpBsD,EAAeD,GAAgBA,EAAazG,QAAQ2G,cAExD,GAAIF,EACA,cAAqBD,KAArB,aAAiC,KAAtBvF,EAAsB,QAE7B,GADiByF,EAAaE,SAAS3F,IACV,QAAXA,GAAqC,QAAjByF,EAElC,YADAD,EAAa1F,UAAUC,OAAO,UAG9ByF,EAAa1F,UAAUI,IAAI,kBAsB1B,IAAIoB,EAAa,CAAEC,aAAc,4BAA6BC,cAPnF,SAAuBoE,GACnBf,EAAYL,gBACZE,EAAezE,KAAK2F,GACpBT,IACAU,OAKJ,SAASV,IACDT,EAAe/E,OAAS,GACxB+E,EAAetE,KAAI,SAAAf,GACf,IAAMyG,EAAehB,EAAKjD,aAAa3D,cAAlB,iBAAiDmB,EAAK4C,OAAtD,MACf8D,EC3FH,SAAuB1G,GAClC,IAAI2G,EAAa3G,EAAK6D,UAAU9C,KAAI,SAAAf,GAAI,OAAIA,EAAKgB,SAAOW,KAAK,IAE7D,uDAAwD3B,EAAKJ,GAA7D,yBAAwF+G,EAAxF,0CACiC3G,EAAK2D,UADtC,iIDwFuBiD,CAAc5G,GAC7ByG,EAAalF,UAAYmF,KA+CrC,SAASF,IACL,IAAMK,EAAWjB,KAAKkB,UAAUzB,GAChCK,aAAaqB,QAAQ,YAAaF,GAGtCpB,EAAKjD,aAAalD,iBAAiB,SApCV,SAAC+D,GACjBA,EAAE5D,OAAOC,UAID,kBADI2D,EAAE5D,OAAOC,QAAlBF,OAEJ+F,EAAMlE,OACNiE,EAAejC,EAAE5D,OAAOuH,WAAWtH,QAAQE,QA8BnD6F,EAAKzB,SAAS1E,iBAAiB,SA1BJ,SAAC+D,GACxB,GAAKA,EAAE5D,OAAOC,QAKd,OAFiB2D,EAAE5D,OAAOC,QAAlBF,MAGJ,IAAK,gBA5BTwG,EAAczF,SAAQ,SAAAP,GAAQ,OACtB,SAAAA,EAAK8C,wBAAL,IAAwBpD,QAAQE,MAAO0F,IACvCtF,EAAKuB,UAAY,GACjB8D,EAAiB,GAAH,OAAOA,EAAe1E,QAAO,SAAAX,GAAI,OAAIA,EAAKJ,KAAO0F,MAC/DA,EAAe,KACfkB,QAyBAjB,EAAMtE,QACN,MACJ,IAAK,eACDsE,EAAMtE,QACN,MACJ,QAEI,YADAgG,QAAQC,IAAI,wB","file":"main.b9001af360ce8d4585a4.js","sourcesContent":["const template = (data = [], placeholder, startID) => {\r\n    let textPlaceholder = placeholder ?? 'Select Value'\r\n    let classSelItem = ' ';\r\n    const items = data.map(item => {\r\n        if (item.id === startID) {\r\n            textPlaceholder = item.value;\r\n            classSelItem = \"selected\"\r\n        } else {\r\n            classSelItem = \" \"\r\n        }\r\n        return `<li class=\"select-item ${classSelItem}\" data-type=\"item\" data-id=\"${item.id}\">${item.value}</li>`\r\n    })\r\n\r\n    return `<div class=\"select-backdrop\" data-type=\"backdrop\"></div>\r\n           <div class=\"select-input\" data-type=\"input\">\r\n          <span class=\"select-text\" data-type=\"value\">\r\n            ${textPlaceholder}\r\n          </span>\r\n        </div>\r\n        <div class=\"select-dropdown\">\r\n          <ul class=\"select-list\">\r\n           ${items.join(' ')}\r\n          </ul>\r\n        </div>`\r\n}\r\n\r\n\r\nexport class Select {\r\n\r\n    constructor(selector, options, startID) {\r\n        this.selectRef = document.querySelector(selector);\r\n        this.options = options;\r\n        this.selectedID = startID;\r\n        this.dispatchFilter = options.dispatchFilter ? options.dispatchFilter : null;\r\n        this._render();\r\n        this._setup();\r\n        this.valueRef = document.querySelector(`${selector} [data-type=\"value\"]`);\r\n        this.selectedItemsArray = [];\r\n    }\r\n\r\n    _setup() {\r\n        this.handlerEvent = this.handlerEvent.bind(this);\r\n        this.selectRef.addEventListener('click', this.handlerEvent);\r\n    }\r\n\r\n    handlerEvent(event) {\r\n        const { type } = event.target.dataset;\r\n        if (type === \"input\") {\r\n            this.toggle()\r\n        }\r\n\r\n        if (type === \"item\") {\r\n            let id = Number(event.target.dataset.id);\r\n            this.selectedID = id;\r\n            let isItemInArray = this.selectedItemsArray.find(item => Number(item.id) === id)\r\n            let isSelectAll = this.selectedItemsArray.find(item => Number(item.id) === 0)\r\n            let itemUser = this._currentItem();\r\n            const elRefs = this.selectRef.querySelectorAll(`.selected`);\r\n            if (isSelectAll || this.selectedItemsArray.length == 0) {\r\n                elRefs.forEach(element => {\r\n                    element.classList.remove(\"selected\");\r\n                });\r\n                this.selectedItemsArray = []\r\n            }\r\n            if (isItemInArray) {\r\n                this.selectedItemsArray = [...this.selectedItemsArray.filter(item => Number(item.id) !== id)]\r\n                event.target.classList.remove(\"selected\");\r\n            } else {\r\n\r\n                if (id === 0) {\r\n                    this.selectedItemsArray = []\r\n                    elRefs.forEach(element => {\r\n                        element.classList.remove(\"selected\");\r\n                    });\r\n                }\r\n                this.selectedItemsArray.push(itemUser)\r\n                event.target.classList.add(\"selected\");\r\n            }\r\n            this.valueRef.textContent = this.selectedItemsArray.length > 0 ? this.selectedItemsArray.map(item => item.value) : 'All';\r\n        }\r\n\r\n        if (type === \"backdrop\") {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    get isOpen() {\r\n        return this.selectRef.classList.contains(\"open\")\r\n    }\r\n\r\n    _currentItem() {\r\n        return this.options.data.find(item => Number(item.id) === this.selectedID)\r\n    }\r\n\r\n    getSelectedItemsArray() {\r\n        return this.selectedItemsArray;\r\n    }\r\n\r\n    toggle() {\r\n        this.isOpen ? this.close() : this.open();\r\n    }\r\n\r\n    _render() {\r\n        const { placeholder, data, startID } = this.options\r\n        this.selectRef.classList.add(\"select\")\r\n        this.selectRef.innerHTML = template(data, placeholder, startID);\r\n    }\r\n\r\n    open() {\r\n        this.selectRef.classList.add('open');\r\n    }\r\n\r\n    close() {\r\n        if (this.dispatchFilter) {\r\n            this.dispatchFilter(this.selectedItemsArray)\r\n        }\r\n        this.selectRef.classList.remove('open')\r\n    }\r\n\r\n    delete() {\r\n        this.selectRef.removeEventListener('click', this.handlerEvent)\r\n        this.selectRef.innerHTML = \" \"\r\n    }\r\n}","import { Select } from '../selectPlugin'\r\nimport data from '../../team_db.json'\r\nimport uniqid from 'uniqid'\r\n\r\nconst selectMember = new Select('[data-type=\"form-select-members\"]', {\r\n    placeholder: 'select value',\r\n    data: data,\r\n});\r\n\r\nexport default class CreateEvents {\r\n\r\n    constructor({ selectorForm, dispatchEvent }) {\r\n        this.formRef = document.querySelector(selectorForm)\r\n        this._init()\r\n        this.eventItem = null;\r\n        this.eventsItemArray = [];\r\n        this.dispatchEvent = dispatchEvent\r\n        this.tableBodyRef = document.querySelector('[data-type=\"table-area\"]');\r\n        this.errorFormRef = document.querySelector('[data-type=\"form-error\"]');\r\n    }\r\n\r\n    _init() {\r\n\r\n        this._formHandlerSubmit = this._formHandlerSubmit.bind(this);\r\n        this.formRef.addEventListener('submit', this._formHandlerSubmit)\r\n    }\r\n\r\n    _isCellFree(marker) {\r\n        let isCellFree = true;\r\n        const cell = this.tableBodyRef.querySelector(`[data-marker=\"${marker}\"]`)\r\n\r\n        if (cell.firstElementChild) {\r\n            isCellFree = false;\r\n        }\r\n        return isCellFree;\r\n    }\r\n\r\n    _errorHandler(message) {\r\n        this.errorFormRef.classList.remove('hidden');\r\n        const errorMessageTemplate = `<p class=\"form-error_message\">${message}</p>`\r\n        this.errorFormRef.innerHTML = errorMessageTemplate\r\n        const timerId = setTimeout(() => {\r\n            this.errorFormRef.classList.add('hidden');\r\n            this.errorFormRef.innerHTML = ''\r\n            clearTimeout(timerId);\r\n        }, 2000)\r\n    }\r\n\r\n    _formHandlerSubmit(e) {\r\n        e.preventDefault();\r\n        const membersArr = selectMember.getSelectedItemsArray()\r\n        const formData = new FormData(this.formRef);\r\n\r\n        if (membersArr.length > 0) {\r\n            this.eventItem = {\r\n                id: uniqid(),\r\n                eventName: formData.get('name'),\r\n                memberArr: membersArr,\r\n                marker: `${formData.get('time')}-${formData.get('day')}`\r\n            }\r\n        } else {\r\n            this._errorHandler('Select Patricipants!');\r\n            return;\r\n        }\r\n\r\n        if (this._isCellFree(this.eventItem.marker)) {\r\n            this.formRef.reset()\r\n            this.dispatchEvent(this.eventItem)\r\n        } else {\r\n            this._errorHandler('Failed to create an event.Time slot is already booked');\r\n        }\r\n    }\r\n}","\r\nexport default class Modal {\r\n    constructor() {\r\n        this.modalRef = document.querySelector('[data-type=\"modal\"]')\r\n    }\r\n    open() {\r\n        this.modalRef.classList.add('open')\r\n    }\r\n    close() {\r\n        this.modalRef.classList.remove('open')\r\n    }\r\n}","import tableData from '../table_db.json'\r\n\r\nfunction createTableRow(time) {\r\n    const items = tableData.day.map(item => `<td data-marker=\"${time}-${item}\" data-type=\"cell\"></td>`)\r\n    return `<tr data-type=\"tr\">\r\n    <td class=\"table-events_row-title\">${time}:00</td>\r\n    ${items.join(' ')}\r\n    </tr >`\r\n}\r\n\r\nexport default function createTableTemplate() {\r\n    const items = tableData.time.map(item => createTableRow(item))\r\n    return `${items.join(' ')}`\r\n}\r\n\r\n\r\n\r\n","\r\nexport default class PageControl {\r\n    constructor({\r\n        selectorButtonCreateEvent,\r\n        selectorPageNav,\r\n        selectorSectionForm,\r\n        selectorSectionTable,\r\n        selectorButtonCancelCreate }) {\r\n\r\n        this.buttonCreateEventRef = document.querySelector(selectorButtonCreateEvent);\r\n        this.buttonCancelEventRef = document.querySelector(selectorButtonCancelCreate);\r\n        this.pageNavRef = document.querySelector(selectorPageNav);\r\n        this.pageSectionFormRef = document.querySelector(selectorSectionForm);\r\n        this.pageSectionTableRef = document.querySelector(selectorSectionTable);\r\n        this._init()\r\n    }\r\n\r\n    _init() {\r\n        this._handlerButtonCreate = this._handlerButtonCreate.bind(this);\r\n        this.buttonCreateEventRef.addEventListener('click', this._handlerButtonCreate);\r\n        this._handlerButtonCancel = this._handlerButtonCancel.bind(this);\r\n        this.buttonCancelEventRef.addEventListener('click', this._handlerButtonCancel);\r\n    }\r\n\r\n    _handlerButtonCancel() {\r\n        this.viewPageTable()\r\n    }\r\n\r\n    _handlerButtonCreate() {\r\n        this.viewPageForm()\r\n    }\r\n    viewPageTable() {\r\n        this.pageNavRef.classList.remove('hidden');\r\n        this.pageSectionTableRef.classList.remove('hidden');\r\n        this.pageSectionFormRef.classList.add('hidden');\r\n    }\r\n    viewPageForm() {\r\n        this.pageNavRef.classList.add('hidden');\r\n        this.pageSectionTableRef.classList.add('hidden');\r\n        this.pageSectionFormRef.classList.remove('hidden');\r\n    }\r\n}","import '@csstools/normalize.css';\nimport './sass/main.scss';\nimport { Select } from './js/selectPlugin'\nimport data from './team_db.json'\nimport CreateEvents from './js/createEvents'\nimport eventTemplate from './js/eventTemplate'\nimport Modal from './js/modal'\nimport createTableTemplate from './js/tableTemplate'\nimport PageControl from './js/pageControl'\n\nlet itemEventArray = []\nlet deleteItemId = null;\n\nconst modal = new Modal()\n\nconst pageControlOptions = {\n    selectorButtonCreateEvent: '[data-type=\"button-create\"]',\n    selectorButtonCancelCreate: '[data-type=\"button-cancel\"]',\n    selectorPageNav: '[data-type=\"page-nav\"]',\n    selectorSectionForm: '[data-type=\"section-form\"]',\n    selectorSectionTable: '[data-type=\"section-table\"]',\n}\nconst pageControl = new PageControl(pageControlOptions)\n\nconst refs = {\n    tableBodyRef: document.querySelector('[data-type=\"table-area\"]'),\n    modalRef: document.querySelector('[data-type=\"modal\"]'),\n}\n\nfunction renderTable() {\n    refs.tableBodyRef.innerHTML = createTableTemplate()\n}\nrenderTable();\nloadFromSave();\n\nfunction loadFromSave() {\n\n    if (localStorage.getItem('save_data')) {\n        const data = localStorage.getItem('save_data')\n        itemEventArray = [...JSON.parse(data)]\n        renderEvent()\n    }\n\n}\n\nconst arrayCellRefs = refs.tableBodyRef.querySelectorAll('[data-type=\"cell\"]');\n\nfunction dispatchFilter(filterValueArray) {\n    if (!filterValueArray) {\n        return\n    }\n    let filtersArr = filterValueArray.map(item => item.value)\n\n    arrayCellRefs.forEach(item => {\n        let domItemEvent = item.firstElementChild;\n        let domFilterStr = domItemEvent && domItemEvent.dataset.membersfilter;\n\n        if (domItemEvent) {\n            for (const filter of filtersArr) {\n                let isIncludes = domFilterStr.includes(filter);\n                if (isIncludes || filter === 'All' || domFilterStr === 'All') {\n                    domItemEvent.classList.remove('hidden')\n                    return\n                } else {\n                    domItemEvent.classList.add('hidden')\n                }\n            }\n        }\n\n    })\n}\n\nconst selectFilter = new Select('[data-type=\"select-plugin\"]', {\n    placeholder: 'select value',\n    data: data,\n    startID: 0,\n    dispatchFilter\n});\n\nfunction dispatchEvent(itemEvent) {\n    pageControl.viewPageTable()\n    itemEventArray.push(itemEvent)\n    renderEvent();\n    save()\n}\n\nconst createEvents = new CreateEvents({ selectorForm: '[data-type=\"form-events\"]', dispatchEvent })\n\nfunction renderEvent() {\n    if (itemEventArray.length > 0) {\n        itemEventArray.map(item => {\n            const tableCellRef = refs.tableBodyRef.querySelector(`[data-marker=\"${item.marker}\"]`)\n            const mockup = eventTemplate(item);\n            tableCellRef.innerHTML = mockup;\n        })\n    }\n}\n\nfunction deleteItem() {\n    arrayCellRefs.forEach(item => {\n        if (item.firstElementChild?.dataset.id === deleteItemId) {\n            item.innerHTML = '';\n            itemEventArray = [...itemEventArray.filter(item => item.id !== deleteItemId)]\n            deleteItemId = null;\n            save()\n        }\n    })\n}\n\nconst handlerOpenModal = (e) => {\n    if (!e.target.dataset) {\n        return\n    }\n    const { type } = e.target.dataset\n    if (type === \"button-delete\") {\n        modal.open();\n        deleteItemId = e.target.parentNode.dataset.id\n    }\n}\n\nconst handlerModalButton = (e) => {\n    if (!e.target.dataset) {\n        return\n    }\n    const { type } = e.target.dataset;\n\n    switch (type) {\n        case 'button-delete':\n            deleteItem()\n            modal.close();\n            break;\n        case 'button-close':\n            modal.close();\n            break;\n        default:\n            console.log('no defined type')\n            return;\n    }\n}\n\nfunction save() {\n    const saveData = JSON.stringify(itemEventArray);\n    localStorage.setItem('save_data', saveData)\n}\n\nrefs.tableBodyRef.addEventListener('click', handlerOpenModal)\nrefs.modalRef.addEventListener('click', handlerModalButton)","\r\nexport default function eventTemplate(item) {\r\n    let membersStr = item.memberArr.map(item => item.value).join('')\r\n\r\n    return `<div class=\"event\" data-type=\"event\" data-id=\"${item.id}\" data-membersfilter=\"${membersStr}\">\r\n           <h2 class=\"event_title\">${item.eventName}</h2>\r\n           <button class=\"event_button-delete\" type='button' data-type=\"button-delete\" >x</button>\r\n           </div>`;\r\n}\r\n"],"sourceRoot":""}